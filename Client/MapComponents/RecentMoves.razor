@*
 * Copyright (C) 2020-2025 Ronald Ossendrijver (admin@treachery.online)
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This
 * program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have
 * received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
*@
@inherits MapComponent


@if (Client.CurrentSkin.ShowArrowsForRecentMoves && Client.Game.CurrentMainPhase == MainPhase.ShipmentAndMove)
{
    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
            width="@(Client.CurrentSkin.PlanetRadius * 2)" height="@(Client.CurrentSkin.PlanetRadius * 2)" 
            style="position: absolute; left:0px; top:0px; height: 100%; width: 100%;"
            pointer-events="none">

        @foreach (var move in Client.Game.RecentMoves.Where(m => m.To is not Homeworld))
        {
            foreach (var origin in move.ForceLocations.Keys)
            {
                var path = Map.FindFirstShortestPath(origin, move.To, false, move.Initiator, Game);

                if (path != null && path.Contains(Game.Map.PolarSink)) {

                    Location from = null;
                    foreach (var to in path)
                    {
                        if (from != null && (to == move.To || to.Territory != from.Territory))
                        {
                            <Arrow FillColor="@Client.CurrentSkin.FactionColor[move.Initiator]" StrokeColor=@Client.CurrentSkin.GetFactionColorTransparent(move.Initiator, "bb")
                                    MarginX="0" MarginY="0" Radius="@(1.2f * Client.CurrentSkin.PlanetRadius)" From=@Client.CurrentSkin.GetCenter(from, Client.Game.Map) To=@Client.CurrentSkin.GetCenter(to, Client.Game.Map) ArrowScale="0.05f" />
                        }

                        if (from == null || to.Territory != from.Territory)
                        {
                            from = to;
                        }
                    }
                }
                else
                {

                    <Arrow FillColor="@Client.CurrentSkin.FactionColor[move.Initiator]" StrokeColor=@Client.CurrentSkin.GetFactionColorTransparent(move.Initiator, "bb")
                            MarginX="0" MarginY="0" Radius="@(1.2f * Client.CurrentSkin.PlanetRadius)" From=@Client.CurrentSkin.GetCenter(origin, Client.Game.Map) To=@Client.CurrentSkin.GetCenter(move.To, Client.Game.Map) ArrowScale="0.05f" />
                }
            }
        }

    </svg>
}
