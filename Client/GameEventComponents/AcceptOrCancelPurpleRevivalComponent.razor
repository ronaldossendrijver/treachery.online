@*
 * Copyright (C) 2020-2024 Ronald Ossendrijver (admin@treachery.online)
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This
 * program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have
 * received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
*@
@inherits GameEventComponent<AcceptOrCancelPurpleRevival>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" CollapsedType="GetType()">

    <Header>Manage Revival Requests</Header>

    <Body>

        @if (Game.CurrentRevivalRequests.Any())
        {
            @if (Game.CurrentRevivalRequests.Any(req => req.Player.IsBot))
            {
                <div class="text-warning mb-1">Bots are awaiting your decision before starting to revive...</div>
            }
            
            <div>Early revival requests:</div>
            <SelectFromImageComponent Game=Game Required=true @bind-Value=@offerHero Values=@Game.CurrentRevivalRequests.Select(req => req.Hero) ImageWidth="80"/>
            <SelectResourcesComponent @bind-Value="price" Min=0 Max=50 Label="Price" />
            <ButtonRowComponent Alignment="" Pass="Pass" PassText="Deny all" Confirm="Confirm" ConfirmText=@OfferLabel Other=Other OtherText=@DenyLabel ConfirmError=@Validation />
        }

        @if (CurrentRevivalOfferValues.Any())
        {
            if (Game.CurrentRevivalRequests.Any())
            {
                <hr style="border-color:white" />
            }

            <div>Existing early revival offers:</div>
            <table class="table table-sm">
                <tbody>
                    @foreach (var kvp in Game.EarlyRevivalsOffers)
                    {
                        <tr class="table-dark">
                            <td><Image Shown=@kvp.Key Width="32"/></td>
                            <td>
                                @if (kvp.Value == int.MaxValue)
                                {
                                    <span>Denied</span>
                                }
                                else
                                {
                                    <SimpleNumberComponent Size=22>@kvp.Value</SimpleNumberComponent>
                                }
                            </td>
                            <td>
                                <button class="btn btn-primary btn-sm" @onclick="e => Cancel(kvp.Key)">Cancel</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }

    </Body>

</GameEventComponentLayout>

@code {

    protected override bool IsUrgent => Game.CurrentRevivalRequests.Any();

    protected override Faction IsFactionSpecific => Faction.Purple;

    private IHero offerHero;
    private int price;

    protected override AcceptOrCancelPurpleRevival ConfirmedResult => new(Game, Faction) { Cancel = false, Hero = offerHero, Price = price };

    protected override AcceptOrCancelPurpleRevival PassedResult => new(Game, Faction) { Cancel = false, Hero = null };

    protected override AcceptOrCancelPurpleRevival OtherResult => new(Game, Faction) { Cancel = false, Hero = offerHero, Price = int.MaxValue };

    private async Task Cancel(IHero hero)
    {
        await Request(new AcceptOrCancelPurpleRevival(Game, Faction) { Cancel = true, Hero = hero });
    }

    private IEnumerable<IHero> CurrentRevivalOfferValues => Game.EarlyRevivalsOffers.Select(kvp => kvp.Key);

    private string OfferLabel => Client.CurrentSkin.Format("Offer {0} for {1}", offerHero, price); 

    private string DenyLabel => Client.CurrentSkin.Format("Deny revival of {0}", offerHero); 
}
