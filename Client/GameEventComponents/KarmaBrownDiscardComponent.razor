@*
 * Copyright (C) 2020-2024 Ronald Ossendrijver (admin@treachery.online)
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This
 * program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have
 * received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
*@
@inherits GameEventComponent<KarmaBrownDiscard>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" CollapsedType="GetType()">

    <Header>Use @Client.CurrentSkin.Describe(TreacheryCardType.Karma) to discard any cards from your hand to gain 3 @Client.CurrentSkin.Describe(Concept.Resource) each</Header>
    <Body>
    
    @if (Karma.ValidKarmaCards(Game, Player).Count() > 1)
    {
        <SelectFromImageComponent @bind-Value="@CardToUse" Values="@Karma.ValidKarmaCards(Game, Player)" T="TreacheryCard" OnChanged="@ChangeCardToUse" ImageWidth="80">
            <Label>@Name(TreacheryCardType.Karma) card to use</Label>
        </SelectFromImageComponent>
    }
    else
    {
        CardToUse = Karma.ValidKarmaCards(Game, Player).FirstOrDefault();
    }

    <SelectFromImageComponent Selected="SelectedCards" Values="@Player.TreacheryCards.Where(c => c != CardToUse)" T="TreacheryCard" OnChanged="StateHasChanged" ImageWidth="80">
        <Label>Cards to discard</Label>
    </SelectFromImageComponent>
    
    <ButtonRowComponent Confirm="Confirm" ConfirmText="Discard" ConfirmError="@Validation"/>

    </Body>

</GameEventComponentLayout>

@code {

    protected override Faction IsFactionSpecific => Faction.Brown;

    private TreacheryCard CardToUse { get; set; }

    private List<TreacheryCard> SelectedCards { get; set; } = [];

    protected override KarmaBrownDiscard ConfirmedResult => new(Game, Faction) { CardToUse = CardToUse, Cards = SelectedCards };

    private void ChangeCardToUse(TreacheryCard obj)
    {
        SelectedCards.Clear();
        StateHasChanged();
    }

}
